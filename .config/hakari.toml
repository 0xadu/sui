# This file contains settings for `cargo hakari`.
# See https://docs.rs/cargo-hakari/latest/cargo_hakari/config for a full list of options.

hakari-package = "workspace-hack"

# Format for `workspace-hack = ...` lines in other Cargo.tomls.
dep-format-version = "4"

# Setting workspace.resolver = "2" in the root Cargo.toml is HIGHLY recommended.
# Hakari works much better with the new feature resolver.
# For more about the new feature resolver, see:
# https://blog.rust-lang.org/2021/03/25/Rust-1.51.0.html#cargos-new-feature-resolver
resolver = "2"

# Add triples corresponding to platforms commonly used by developers here.
# https://doc.rust-lang.org/rustc/platform-support.html
platforms = [
    "aarch64-apple-darwin",
    "x86_64-unknown-linux-gnu",
    "x86_64-pc-windows-msvc",
    # "x86_64-apple-darwin",
]

# Write out exact versions rather than a semver range. (Defaults to false.)
# exact-versions = true

output-single-feature = true

[traversal-excludes]
## Exclude the 'move-unit-test' crate in order to ensure that the 'testing'
# feature isn't enabled in the workspace-hack
workspace-members = [ "sui-move", "bytecode-interpreter-crypto", "move-unit-test", "move-cli", "move-transactional-test-runner",
                    "test-generation" , "serializer-tests", "read-write-set", "move-vm-types", "move-vm-transactional-tests",
                    "bytecode-interpreter-testsuite","bytecode-verifier-libfuzzer","bytecode-verifier-tests","bytecode-verifier-transactional-tests",
                    "invalid-mutations","module-generation","move-abigen","move-bytecode-source-map","move-bytecode-utils",
                    "move-bytecode-viewer","move-compiler-transactional-tests","move-core-types","move-coverage","move-disassembler","move-docgen",
                    "move-errmapgen","move-ethereum-abi","move-explain","move-ir-compiler-transactional-tests","move-ir-to-bytecode","move-ir-types",
                    "move-package","move-prover-boogie-backend","move-prover-test-utils","move-resource-viewer","move-stackless-bytecode",
                    "move-stackless-bytecode-interpreter","move-table-extension","move-to-yul","move-vm-integration-tests","move-vm-paranoid-tests",
                    "move-vm-runtime","move-vm-test-utils","move-vm-transactional-tests","move-vm-types","read-write-set","serializer-tests",
                    "evm-exec-utils","move-binary-format","move-borrow-graph","move-bytecode-verifier","move-command-line-common","move-compiler",
                    "move-ir-compiler","move-model","move-prover","move-read-write-set-types","move-stdlib","move-symbol-pool"
                    ]
third-party = [
    { name = "object_store" },
]

[final-excludes]
workspace-members = [
    "x",
]
